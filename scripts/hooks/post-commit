#!/usr/bin/env bash
# Copyright (C) 2020 FireEye, Inc. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
# You may obtain a copy of the License at: [package root]/LICENSE.txt
# Unless required by applicable law or agreed to in writing, software distributed under the License
#  is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and limitations under the License.
#
# doesn't matter if this gets repeated later on in a hooks file

# Use a console with emojis support for a better experience

# Stash uncommited changes
MSG="post-commit-$(date +%s)";
git stash push -kqum "$MSG";
STASH_LIST=$(git stash list);
if [[ "$STASH_LIST" == *"$MSG"* ]]; then
  echo "Uncommited changes stashed with message '$MSG', if you abort before they are restored run \`git stash pop\`";
fi

# Run style checker and print state (it doesn't block the commit)
pycodestyle --config=./.github/tox.ini ./capa/ > style-checker-output.log 2>&1;
if [ $? == 0 ]; then
  echo 'Style checker succeeds!! ðŸ’˜';
else
  echo 'Style checker failed ðŸ˜­';
  echo 'Check style-checker-output.log for details';
fi

# Run rule linter and print state (it doesn't block the commit)
python ./scripts/lint.py ./rules/ > rule-linter-output.log 2>&1;
if [ $? == 0 ]; then
  echo 'Rule linter succeeds!! ðŸ’–';
else
  echo 'Rule linter failed ðŸ˜­';
  echo 'Check rule-linter-output.log for details';
fi

# Restore stashed changes
if [[ "$STASH_LIST" == *"$MSG"* ]]; then
  git stash pop -q --index;
  echo "Stashed changes '$MSG' restored";
fi
